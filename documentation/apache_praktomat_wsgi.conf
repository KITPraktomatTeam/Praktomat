# put the following line with removed '#' outside of all VirtualHost configurations i.e. as first line in sites-enabled/default-ssl.conf, see https://modwsgi.readthedocs.io/en/master/configuration-directives/WSGIRestrictEmbedded.html
# WSGIRestrictEmbedded On


<Macro Praktomat $id $path $proccount>
    # WSGI setup
    # Make sure we're running Praktomat as user "praktomat", so file-permissions fit
    # We are not using threading, as some parts are not threadsafe (e.g. pygment)
    WSGIDaemonProcess local_$id user=praktomat group=praktomat processes=$proccount threads=1 display-name=$id_Praktomat_Apache lang=en_US.UTF-8 python-home=$path/env python-path=$path/Praktomat:$path/env

    # Open this to test if we're really in daemon Mode
    # You may need to set the correct python path in testdaemon.wsgi beforehand
    #
    # WSGIScriptAlias /testdaemon $path/Praktomat/documentation/testdaemon.wsgi

    # the value of parameter process-group is used inside praktomat.wsgi to determine the required value for environment variable DJANGO_SETTINGS_MODULE
    # if process-group is "local_bar", than DJANGO_SETTINGS_MODULE will be set to "settings.local", which will choose Praktomat/src/settings/local.py.
    # if it is "foobar" without a underscore than DJANGO_SETTINGS_MODULE will be set to "settings.foobar" and in Praktomat/src/settings there should be a foobar.py
    # if environment variable DJANGO_SETTINGS_MODULE was set on other way, i.e. via Apaches SetEnv, than that value takes precedence.
    # (Hint: All WSGI applications within the same process group will execute within the context of the same group of daemon processes.
    #  So django applications with different versions or virtual environments should not use the same process-group.
    #  Without setting a process group wsgi modules will share the same process space with other Apache modules.)
    #
    # Since Praktomat is currently using pandas which is calling numpy while loading and numpy is not designed to run in a subinterpreter, 
    # we are now forcing our WSGI application to run within the first interpreter via setting WSGIScriptAlias parameter application-group=%{GLOBAL}
    # cf. https://github.com/KITPraktomatTeam/Praktomat/issues/353
    # cf. https://modwsgi.readthedocs.io/en/develop/configuration-directives/WSGIScriptAlias.html
    # cf. pandas warning message: 
    # > python3.10/site-packages/pandas/__init__.py:11: UserWarning: NumPy was imported from a Python sub-interpreter but NumPy does not properly support sub-interpreters. 
    # > This will likely work for most users but might cause hard to track down issues or subtle bugs. A common user of the rare sub-interpreter feature is wsgi which also 
    # > allows single-interpreter mode.

    WSGIScriptAlias /$id  $path/Praktomat/wsgi/praktomat.wsgi process-group=local_$id application-group=%{GLOBAL}


    # The installation directory
    <Directory $path/Praktomat/>
                # Apache 2.2
                <IfVersion < 2.4>
                 Order allow,deny
                 allow from all
                </IfVersion>

                # Apache 2.4
                <IfVersion >= 2.4>
                 Require all granted
                </IfVersion>
    </Directory>

    # Depending on the version of apache(?), the following might be necessary
    # to get correct relative URLs for http://.../id (no trailing slashes)
    # RewriteRule ^/$id$ /$id/ [R=301]

    Alias /$id/static/ $path/static/

    <Location /$id>
         WSGIProcessGroup local_$id
    </Location>

    <Directory $path/static/>
                # Apache 2.2
                <IfVersion < 2.4>
                 Order allow,deny
                 allow from all
                </IfVersion>

                # Apache 2.4
                <IfVersion >= 2.4>
                 Require all granted
                </IfVersion>
    </Directory>

    <Directory $path/work-data/>
               # Apache 2.2
                <IfVersion < 2.4>
                 Order allow,deny
                 allow from all
                </IfVersion>

                # Apache 2.4
                <IfVersion >= 2.4>
                 Require all granted
                </IfVersion>
    </Directory>

   # RH: try, but not work as I think: https://github.com/johnsensible/django-sendfile
   # RewriteEngine On
    # see if we're on an internal redirect or not
   # RewriteCond %{THE_REQUEST} ^[\S]+\ /upload/
   # RewriteRule ^/upload/ - [F]


    # We're using xsendfile
    <Location /$id/upload/ >
#    <Directory /$id/upload/ >
        XSendFile on
        #XSendFilePath $path/PraktomatSupport/
        XSendFilePath $path/work-data/
    </Location>
#    </Directory>

    #Alias /$id/upload/jplag/ $path/work-data/jplag/

    # This enables shibboleth support
    <Location /$id/accounts/shib_login>
        Order deny,allow
        Allow from all
        AuthType shibboleth
        ShibRequireSession On
        Require valid-user
        Satisfy all
    </Location>
</Macro>

<VirtualHost *:80>
	ServerAdmin webmaster@localhost #change it to something else
        ServerName praktomat.localhost  #change it to something else
        #semi old way to activate a praktomat instance for apache
        #Use Praktomat 2014_SS  /srv/praktomat/2014_SS/

        #new way to activate a praktomat instance for apache:
        # parameter one is used to create the Name for WSGIProcessGroup and the display-name for WSGIDaemonProcess, with it you can differentiate between instances i.e. while looking on htop.
        # parameter two is the path where the repository had been cloned or copied to.
        # parameter three is the number of processes used by that instance.
        Use Praktomat 2020w_ap  /srv/praktomat/2021ws   30
</VirtualHost>

