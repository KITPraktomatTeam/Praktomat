// Default java policy for the praktomat
// Set as $POLICY by ScriptChecker and DejaGnuChecker via settings.JVM_POLICY and used by ./src/checker/scripts/java
grant {
// If Java (and student solutions) should be allowed to read the temporary created working directory, than activate the following three lines:
//        permission java.util.PropertyPermission "user.dir", "read"; // user.dir contains the name of a temporary folder inside work-data/SolutionSandbox
//        permission java.io.FilePermission "${user.dir}" , "read";   // allow to read user.dir, where uploaded files were stored temporary
//        permission java.io.FilePermission "${user.dir}${/}-" , "read"; // allow to read directory and recursivly all files and subdirectories
//// Following information about special pathnames taken from Java 18 API class FilePermission:
////      permission java.io.FilePermission "*" , "read"; // read all files in current directory
////      permission java.io.FilePermission "-", "read";  // read all files in current directory and recursivly all files and subdirectories
////      permission java.io.FilePermission "<<ALL FILES>>", "read"; // read all files on disc ...

///////////////

	permission java.lang.RuntimePermission "shutdownHooks";
	permission java.lang.RuntimePermission "setIO"; // change sysout, stderr, stdin
};

// Settings for own java-based TestFrameworks started via ScriptChecker ... perhaps switch to use JavaChecker and junit.policy
// The following block can be seen as an example how to configure an own java based Testframework.
/*
grant codeBase "file:TestRunner.jar" {
        permission java.lang.RuntimePermission "createClassLoader";
        permission java.util.PropertyPermission "user.dir", "read"; // get current working dir
        permission java.io.FilePermission "${user.dir}" , "read";
        permission java.io.FilePermission "${user.dir}${/}-" , "read";
// Following information about special pathnames taken from Java 18 API class FilePermission:
//      permission java.io.FilePermission "*" , "read"; // read all files in current directory
        permission java.io.FilePermission "-", "read";  // read all files in current directory and recursivly all files and subdirectories
//      permission java.io.FilePermission "<<ALL FILES>>", "read"; // read all files on disc ...
        permission java.io.FilePermission "debug.log", "write";
        permission java.lang.RuntimePermission "setIO"; // change sysout, stderr, stdin
};

grant codeBase "file:TestSuite.jar" {
    // TestIO
    permission java.lang.RuntimePermission "setIO";                 // change sysout, syserr & sysin

    // TypeChecks
    permission java.lang.RuntimePermission "accessDeclaredMembers";
};
*/
