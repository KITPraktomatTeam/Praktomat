# -*- coding: utf-8 -*-
# Generated by Django 1.11.20 on 2019-04-08 14:27
from __future__ import unicode_literals

import checker.basemodels
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('checker', '0011_auto_20190327_1046'),
    ]

    operations = [
        migrations.AlterField(
            model_name='cbuilder',
            name='_file_pattern',
            field=models.CharField(default='^[a-zA-Z0-9_]*$', help_text='Regular expression describing all source files to be passed to the compiler.', max_length=1000),
        ),
        migrations.AlterField(
            model_name='cbuilder',
            name='_flags',
            field=models.CharField(blank=True, default='-Wall', help_text='Compiler flags', max_length=1000),
        ),
        migrations.AlterField(
            model_name='cbuilder',
            name='_libs',
            field=models.CharField(blank=True, default='', help_text='Compiler libraries', max_length=1000),
        ),
        migrations.AlterField(
            model_name='cbuilder',
            name='_output_flags',
            field=models.CharField(blank=True, default='-o %s', help_text="Output flags. '%s' will be replaced by the program name.", max_length=1000),
        ),
        migrations.AlterField(
            model_name='checkstylechecker',
            name='name',
            field=models.CharField(default='CheckStyle', help_text='Name to be displayed on the solution detail page.', max_length=100),
        ),
        migrations.AlterField(
            model_name='cxxbuilder',
            name='_file_pattern',
            field=models.CharField(default='^[a-zA-Z0-9_]*$', help_text='Regular expression describing all source files to be passed to the compiler.', max_length=1000),
        ),
        migrations.AlterField(
            model_name='cxxbuilder',
            name='_flags',
            field=models.CharField(blank=True, default='-Wall', help_text='Compiler flags', max_length=1000),
        ),
        migrations.AlterField(
            model_name='cxxbuilder',
            name='_libs',
            field=models.CharField(blank=True, default='', help_text='Compiler libraries', max_length=1000),
        ),
        migrations.AlterField(
            model_name='cxxbuilder',
            name='_output_flags',
            field=models.CharField(blank=True, default='-o %s', help_text="Output flags. '%s' will be replaced by the program name.", max_length=1000),
        ),
        migrations.AlterField(
            model_name='dejagnusetup',
            name='test_defs',
            field=checker.basemodels.CheckerFileField(help_text='Das Setup benutzt den <A HREF="http://www.gnu.org/software/dejagnu/dejagnu.html">DejaGnu-Testrahmen</A>, um die Programme zu testen. Die in dieser Datei enthaltenen Definitionen gelten für alle Testfälle dieser Aufgabe. Sie werden beim Testen in die DejaGnu-Datei <TT>default.exp</TT> geschrieben. (Vergl. hierzuden Abschnitt <EM>Target dependent procedures</EM> im    <A HREF="http://www.gnu.org/manual/dejagnu/" TARGET="_blank">DejaGnu-Handbuch</A>.) Die Variablen PROGRAM und JAVA werden mit dem Programmnamen bzw. dem Pfad zur Java-Runtime ersetzt.', max_length=500, upload_to=checker.basemodels.get_checkerfile_storage_path),
        ),
        migrations.AlterField(
            model_name='dejagnutester',
            name='test_case',
            field=checker.basemodels.CheckerFileField(help_text='In den folgenden DejaGnu-Testfällen werden typischerweise Funktionen aufgerufen, die beim vorherigen Schritt <EM>Tests einrichten</EM> definiert wurden.     Siehe    auch den Abschnitt <EM>How to write a test case</EM> im <A TARGET="_blank" HREF="http://www.gnu.org/manual/dejagnu/">DejaGnu-Handbuch</A>.', max_length=500, upload_to=checker.basemodels.get_checkerfile_storage_path),
        ),
        migrations.AlterField(
            model_name='fortranbuilder',
            name='_file_pattern',
            field=models.CharField(default='^[a-zA-Z0-9_]*$', help_text='Regular expression describing all source files to be passed to the compiler.', max_length=1000),
        ),
        migrations.AlterField(
            model_name='fortranbuilder',
            name='_flags',
            field=models.CharField(blank=True, default='-Wall', help_text='Compiler flags', max_length=1000),
        ),
        migrations.AlterField(
            model_name='fortranbuilder',
            name='_libs',
            field=models.CharField(blank=True, default='', help_text='Compiler libraries', max_length=1000),
        ),
        migrations.AlterField(
            model_name='fortranbuilder',
            name='_output_flags',
            field=models.CharField(blank=True, default='-o %s', help_text="Output flags. '%s' will be replaced by the program name.", max_length=1000),
        ),
        migrations.AlterField(
            model_name='haskellbuilder',
            name='_file_pattern',
            field=models.CharField(default='^[a-zA-Z0-9_]*$', help_text='Regular expression describing all source files to be passed to the compiler.', max_length=1000),
        ),
        migrations.AlterField(
            model_name='haskellbuilder',
            name='_flags',
            field=models.CharField(blank=True, default='-Wall', help_text='Compiler flags', max_length=1000),
        ),
        migrations.AlterField(
            model_name='haskellbuilder',
            name='_libs',
            field=models.CharField(blank=True, default='', help_text='Compiler libraries', max_length=1000),
        ),
        migrations.AlterField(
            model_name='haskellbuilder',
            name='_output_flags',
            field=models.CharField(blank=True, default='-o %s', help_text="Output flags. '%s' will be replaced by the program name.", max_length=1000),
        ),
        migrations.AlterField(
            model_name='haskelltestframeworkchecker',
            name='ignore',
            field=models.CharField(blank=True, default='', help_text='space-separated list of files to be ignored during compilation', max_length=4096),
        ),
        migrations.AlterField(
            model_name='haskelltestframeworkchecker',
            name='include_testcase_in_report',
            field=models.CharField(choices=[('DL', 'Download-Link only'), ('NO', 'Do not make the testcases source available'), ('FULL', 'Also copy the source into the report')], default='DL', help_text='Make the testcases source available via the checkers result report?', max_length=4),
        ),
        migrations.AlterField(
            model_name='isabellechecker',
            name='logic',
            field=models.CharField(default='HOL', help_text='Default heap to use', max_length=100),
        ),
        migrations.AlterField(
            model_name='javabuilder',
            name='_file_pattern',
            field=models.CharField(default='^[a-zA-Z0-9_]*$', help_text='Regular expression describing all source files to be passed to the compiler.', max_length=1000),
        ),
        migrations.AlterField(
            model_name='javabuilder',
            name='_flags',
            field=models.CharField(blank=True, default='-Wall', help_text='Compiler flags', max_length=1000),
        ),
        migrations.AlterField(
            model_name='javabuilder',
            name='_libs',
            field=models.CharField(blank=True, default='', help_text='Compiler libraries', max_length=1000),
        ),
        migrations.AlterField(
            model_name='javabuilder',
            name='_output_flags',
            field=models.CharField(blank=True, default='-o %s', help_text="Output flags. '%s' will be replaced by the program name.", max_length=1000),
        ),
        migrations.AlterField(
            model_name='javagccbuilder',
            name='_file_pattern',
            field=models.CharField(default='^[a-zA-Z0-9_]*$', help_text='Regular expression describing all source files to be passed to the compiler.', max_length=1000),
        ),
        migrations.AlterField(
            model_name='javagccbuilder',
            name='_flags',
            field=models.CharField(blank=True, default='-Wall', help_text='Compiler flags', max_length=1000),
        ),
        migrations.AlterField(
            model_name='javagccbuilder',
            name='_libs',
            field=models.CharField(blank=True, default='', help_text='Compiler libraries', max_length=1000),
        ),
        migrations.AlterField(
            model_name='javagccbuilder',
            name='_output_flags',
            field=models.CharField(blank=True, default='-o %s', help_text="Output flags. '%s' will be replaced by the program name.", max_length=1000),
        ),
        migrations.AlterField(
            model_name='junitchecker',
            name='ignore',
            field=models.CharField(blank=True, default='', help_text='space-separated list of files to be ignored during compilation, i.e.: these files will not be compiled.', max_length=4096),
        ),
        migrations.AlterField(
            model_name='junitchecker',
            name='junit_version',
            field=models.CharField(choices=[('junit4', 'JUnit 4'), ('junit3', 'JUnit 3')], default='junit3', max_length=16),
        ),
        migrations.AlterField(
            model_name='junitchecker',
            name='test_description',
            field=models.TextField(help_text='Description of the Testcase. To be displayed on Checker Results page when checker is  unfolded.'),
        ),
        migrations.AlterField(
            model_name='linewidthchecker',
            name='exclude',
            field=models.CharField(blank=True, default='.*\\.txt$', help_text='Regular expression describing included filenames, which shall be excluded. Case insensitive. Blank: use all files.', max_length=100),
        ),
        migrations.AlterField(
            model_name='linewidthchecker',
            name='include',
            field=models.CharField(blank=True, default='.*', help_text='Regular expression describing the filenames to be checked. Case insensitive. Blank: use all files.', max_length=100),
        ),
        migrations.AlterField(
            model_name='scalabuilder',
            name='_file_pattern',
            field=models.CharField(default='^[a-zA-Z0-9_]*$', help_text='Regular expression describing all source files to be passed to the compiler.', max_length=1000),
        ),
        migrations.AlterField(
            model_name='scalabuilder',
            name='_flags',
            field=models.CharField(blank=True, default='-Wall', help_text='Compiler flags', max_length=1000),
        ),
        migrations.AlterField(
            model_name='scalabuilder',
            name='_libs',
            field=models.CharField(blank=True, default='', help_text='Compiler libraries', max_length=1000),
        ),
        migrations.AlterField(
            model_name='scalabuilder',
            name='_output_flags',
            field=models.CharField(blank=True, default='-o %s', help_text="Output flags. '%s' will be replaced by the program name.", max_length=1000),
        ),
        migrations.AlterField(
            model_name='scriptchecker',
            name='name',
            field=models.CharField(default='Externen Tutor ausführen', help_text='Name to be displayed on the solution detail page.', max_length=100),
        ),
        migrations.AlterField(
            model_name='textchecker',
            name='choices',
            field=models.IntegerField(choices=[(0, 'The text must not be in the solution'), (1, 'The text has to be in the solution')], default=1, verbose_name='Select:'),
        ),
    ]
